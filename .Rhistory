print("Statistics Rocks (roughly speaking)!")
print(words)
print("words")
install.packages(c("ggplot2","gcookbook","UsingR"))
library(ggplot2)
library(gcookbook)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge",stat="identity")
rbinom(7, size = 100, prob = 0.25)
rnorm(3, mean = 5, sd = 0.1)
qplot(rexp(1000, rate = 2))
qplot(rexp(1000, rate = 2), binwidth = 0.25)
qplot(rexp(100000,rate=2),binwidth=0.25)
help(qplot)
library(ggplot2)
library(gcookbook)
qplot(rexp(100000,rate=2),binwidth=0.25)
qplot(rexp(100000,rate=2)
qplot(rexp(100000,rate=2))
qplot(rexp(100000,rate=2))
qplot(rexp(100000,rate=1))
qplot(rexp(100000,rate=2),binwidth=0.25)
irisData = read.csv(
"http://vincentarelbundock.github.io/Rdatasets/csv/datasets/iris.csv")
summary(irisData)
mean(irisData$Petal.Length)
mean(irisData$Sepal.Length)
levels(irisData$Species)
mean(irisData$Sepal.Length)
levels(irisData$Sepal.Length)
n = dim(irisData)[1]                 # Sample Size
xb = mean(irisData$Sepal.Length)     # x_bar
s  = sqrt(var(irisData$Sepal.Length)) # standard deviation
z  = qnorm(0.975)                    # Critical value for 95%
xb - z*s/sqrt(n)
xb +z*s/sqrt(n)
t.test(irisData$Sepal.Length)$conf.int
library(UrsingR)
library(UsingR)
simple.z.test(irisData$Sepal.Length, sigma=sqrt(var(irisData$Sepal.Length)))
listy = c(10, 20, 5, 6)
length(listy)
sum(listy)
cumsum(listy)
prod(listy)
cumprod(listy)
1:10
setwd("~/data visualization/final/final_DiabetesVis")
library(plyr,quietly=TRUE, warn.conflicts=FALSE)
library(ggplot2)
library(dplyr)
library(reshape2)
library(cluster)
df <- read.csv('D-5.1-data.csv')
View(df)
dfload <- read.csv('D-5.1-data.csv')
View(dfload)
df <- data.frame(dfload[42:43,])
View(df)
colnames(df) = c("status", "country", "2005-8", "StdErr1",	"LowerCI",	"UpperCI", "2009-12",
"StdErr2",	"LowerCI",	"UpperCI", "2013-16", "StdErr3",	"LowerCI",	"UpperCI")
colnames(df) = c("status", "country", "2005-8", "StdErr",	"LowerCI",	"UpperCI", "2009-12",
"StdErr",	"LowerCI",	"UpperCI", "2013-16", "StdErr",	"LowerCI",	"UpperCI")
a1c9 = df[,c(1, 3, 7, 11)]
View(a1c9)
a1c9 = melt(a1c9)
View(a1c9)
help(melt)
a1c9 = melt(a1c9, id.vars = status)
a1c9 = melt(a1c9, id.vars = 'status')
a1c9$a1c = as.factor("9+", "9+", "9+", "9+", "9+", "9+")
a1c9$a1c = as.factor["9+", "9+", "9+", "9+", "9+", "9+"]
a1c9$a1c = c("9+", "9+", "9+", "9+", "9+", "9+")
View(dfload)
collabel = c("status", "country", "2005-8", "StdErr",	"LowerCI",	"UpperCI", "2009-12",
"StdErr",	"LowerCI",	"UpperCI", "2013-16", "StdErr",	"LowerCI",	"UpperCI")
colnames(df) = collabel
df2load <- read.csv('D-5.2-data.csv')
df2 <- data.frame(df2load[42:43,])
colnames(df2) = collabel
View(df2load)
df2 <- df2load[c(42,44),]
View(df2)
colnames(df2) = collabel
a1c7 <- df[,c(1, 3, 7, 11)]
View(a1c7)
a1c7 <- df[,c(1, 3, 7, 11)]
a1c7 = melt(a1c7, id.vars = 'status')
a1c7$a1c7 = c("<7", "<7", "<7", "<7", "<7", "<7")
a1c = df[,c(1, 3, 7, 11)]
a1c = melt(a1c, id.vars = 'status')
a1c$a1c9 = c(">9", ">9", ">9", ">9", ">9", ">9")
View(a1c)
a1c7 <- df[,c(1, 3, 7, 11)]
a1c7$a1c7 = c("<7", "<7")
a1c = df[,c(1, 3, 7, 11)]
a1c$a1c9 = c(">9", ">9")
a1c = melt(a1c, id.vars = 'status')
a1c = melt(a1c, id.vars = ('status', 'a1c9') )
a1c = melt(a1c, id.vars = ('status' 'a1c9') )
a1c = melt(a1c, id.vars = 'status' 'a1c9' )
a1c = melt(a1c, id.vars = 'status', 'a1c9' )
a1c = melt(a1c, id.vars = c('status', 'a1c9') )
a1c = df[,c(1, 3, 7, 11)]
a1c$a1c9 = c(">9", ">9")
a1c = melt(a1c, id.vars = c('status', 'a1c9') )
a1c = df[,c(1, 3, 7, 11)]
a1c$a1c9 = c(">9", ">9")
a1c <- merge(a1c, a1c7, by = "status")
a1c = df[,c(1, 3, 7, 11)]
a1c$a1c9 = c(">9", ">9")
a1c <- merge(a1c, a1c7)
a1c7 <- df[,c(1, 3, 7, 11)]
a1c7$a1c = c("<7", "<7")
a1c = df[,c(1, 3, 7, 11)]
a1c$a1c = c(">9", ">9")
a1c <- rbind(a1c, a1c7)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$a1c = as.numeric(a1c$a1c)
a1c <- rbind(a1c9, a1c7)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$a1c = as.numeric(a1c$a1c)
View(a1c)
a1c <- rbind(a1c9, a1c7)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$a1c = as.numeric(a1c$a1c)
a1c <- rbind(a1c9, a1c7)
View(a1c9)
a1c9 = df[,c(1, 3, 7, 11)]
a1c9$a1c = c(">9", ">9")
a1c <- rbind(a1c9, a1c7)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$a1c = as.numeric(a1c$a1c)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c <- rbind(a1c9, a1c7)
View(a1c)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$value = as.numeric(a1c$value)
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ .) +
#geom_errorbar(aes(ymin = lowerCI, ymax = upperCI), width=.2,position=position_dodge(.9)) +
ggtitle("Insurance Status for Diabetics with HbA1c >9%")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ .) +
#geom_errorbar(aes(ymin = lowerCI, ymax = upperCI), width=.2,position=position_dodge(.9)) +
ggtitle("Insurance Status by a1c")
View(a1c9)
View(df2)
View(df)
a1c7 <- df2[,c(1, 3, 7, 11)]
a1c7$a1c = c("<7", "<7")
a1c <- rbind(a1c9, a1c7)
a1c = melt(a1c, id.vars = c('status', 'a1c') )
a1c$value = as.numeric(a1c$value)
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ .) +
#geom_errorbar(aes(ymin = lowerCI, ymax = upperCI), width=.2,position=position_dodge(.9)) +
ggtitle("Insurance Status by a1c")
countrydf <- read.table("pricebycountry.txt",
sep = "",
header = FALSE
)
colnames(countrydf) = countrydf[1,]
countrydf = countrydf[-1,]
countrydf[] <- lapply(countrydf, gsub, pattern='[$]', replacement='')
countrydf$Analog <- as.numeric(countrydf$Analog)
ordered <- countrydf[order(countrydf$Analog, decreasing = TRUE),]
top10 =  head(ordered, 10)
top10$Country = reorder(top10$Country, top10$Analog)
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()+
theme(text=element_text(size=18, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()+
ggtitle("Cost of Analog Insulin") +
theme(text=element_text(size=18, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()+
ggtitle("Top 10 Highest Costs of Analog Insulin") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggtitle("Top 10 Highest Costs of Analog Insulin") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()+
scale_fill_brewer(palette="Set1") +
ggtitle("Top 10 Highest Costs of Analog Insulin") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
coord_flip()+
ggtitle("Top 10 Highest Costs of Analog Insulin") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette="Set1")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price") +
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price") +
xlab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price") +
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), vjust=-0.25)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), vjust=0.25)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), vjust=-0.25)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0.25)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0.5)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0.)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9))+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set4")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set2")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set5")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")+
theme_bw
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme(text=element_text(size=15, family="sans"), legend.position = "none")+
theme_bw()
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
theme(text=element_text(size=15, family="sans"), legend.position = "none", plot.background = element_rect(fill = "slateblue")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none", plot.background = element_rect(fill = "slateblue"))
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
#theme_bw()+
theme_stata()+
theme(text=element_text(size=15, family="sans"))
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none", plot.background = element_rect(fill = "purple"))
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none", plot.background = element_rect(fill = "lilac"))
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none", plot.background = element_rect(fill = "pink2"))
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=Analog), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(top10, aes(x = Country, y = Analog, fill = Country))+
geom_bar(stat = "identity")+
geom_text(aes(label=paste0("$", Analog)), position=position_dodge(width=0.9), hjust=0)+
scale_fill_brewer(palette="Set3")+
coord_flip()+
ggtitle("Countries with Highest Analog Insulin Price")+
ylab("Price per Standard Unit (USD)")+
theme_bw()+
theme(text=element_text(size=15, family="sans"), legend.position = "none")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ .) +
ggtitle("Insurance Status by a1c")
a1clabel = c("HbA1c under 7.0%", "HbA1c above 9.0%")
ggtitle("Insurance Status by a1c")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = labeller(a1c = a1clabel)) +
ggtitle("Insurance Status by a1c")
a1clabel = c("under 7.0%", "above 9.0%")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = labeller(a1c = a1clabel)) +
ggtitle("Insurance Status by a1c")
a1clabel = c("<7.0%", ">9.0%")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = labeller(a1c = a1clabel)) +
ggtitle("Insurance Status by a1c")
a1clabel = c("HbA1c under 7.0%", "HbA1c above 9.0%")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = labeller(a1c = a1clabel)) +
ggtitle("Insurance Status by a1c")
a1c_names = list("<7" = "HbA1c under 7.0%", ">9" = "HbA1c above 9.0%")
a1clabeller <- function(variable,value){
return(a1c_names[value])
}
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = a1clabeller) +
ggtitle("Insurance Status by a1c")
ggplot(a1c, aes(x = variable, y = value, fill = status))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = a1clabeller) +
ggtitle("Insurance Status by HbA1c")
View(df2load)
View(a1c9)
