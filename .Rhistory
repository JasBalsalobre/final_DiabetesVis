print("Statistics Rocks (roughly speaking)!")
print(words)
print("words")
install.packages(c("ggplot2","gcookbook","UsingR"))
library(ggplot2)
library(gcookbook)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) +
geom_bar(position="dodge",stat="identity")
rbinom(7, size = 100, prob = 0.25)
rnorm(3, mean = 5, sd = 0.1)
qplot(rexp(1000, rate = 2))
qplot(rexp(1000, rate = 2), binwidth = 0.25)
qplot(rexp(100000,rate=2),binwidth=0.25)
help(qplot)
library(ggplot2)
library(gcookbook)
qplot(rexp(100000,rate=2),binwidth=0.25)
qplot(rexp(100000,rate=2)
qplot(rexp(100000,rate=2))
qplot(rexp(100000,rate=2))
qplot(rexp(100000,rate=1))
qplot(rexp(100000,rate=2),binwidth=0.25)
irisData = read.csv(
"http://vincentarelbundock.github.io/Rdatasets/csv/datasets/iris.csv")
summary(irisData)
mean(irisData$Petal.Length)
mean(irisData$Sepal.Length)
levels(irisData$Species)
mean(irisData$Sepal.Length)
levels(irisData$Sepal.Length)
n = dim(irisData)[1]                 # Sample Size
xb = mean(irisData$Sepal.Length)     # x_bar
s  = sqrt(var(irisData$Sepal.Length)) # standard deviation
z  = qnorm(0.975)                    # Critical value for 95%
xb - z*s/sqrt(n)
xb +z*s/sqrt(n)
t.test(irisData$Sepal.Length)$conf.int
library(UrsingR)
library(UsingR)
simple.z.test(irisData$Sepal.Length, sigma=sqrt(var(irisData$Sepal.Length)))
listy = c(10, 20, 5, 6)
length(listy)
sum(listy)
cumsum(listy)
prod(listy)
cumprod(listy)
1:10
oop <- read.csv('POS_prices.csv')
setwd("~/data visualization/final/final_DiabetesVis")
library(plyr,quietly=TRUE, warn.conflicts=FALSE)
library(ggplot2)
library(dplyr)
library(reshape2)
library(cluster)
oop <- read.csv('POS_prices.csv')
View(oop)
yearly <- summarize(group_by(oop, year),
cost = mean(Average_Point.of.Sale_Price_per_Script))
View(yearly)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text()
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)))
yearly <- trunc(yearly)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)))
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = 0.25)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = 0.5)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = 1)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = -3)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = -2)
ggplot(yearly, aes(x = year, y = cost))+
geom_point()+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = -1)
ggplot(yearly, aes(x = year, y = cost))+
geom_point(shape = 21)+
geom_line()+
geom_text(aes(label=paste0("$", cost)), vjust = -1)
dfload <- read.csv('D-5.1-data.csv')
View(dfload)
#a1c above 9
df_race9 <- dfload[c(8,11,12),]
View(df_race9)
colnames(df_race9) = collabel
collabel = c("status", "country", "2005-8", "StdErr",	"LowerCI",	"UpperCI", "2009-12",
"StdErr",	"LowerCI",	"UpperCI", "2013-16", "StdErr",	"LowerCI",	"UpperCI")
colnames(df_race9) = collabel
collabel2 = c("race", "country", "2005-8", "StdErr",	"LowerCI",	"UpperCI", "2009-12",
"StdErr",	"LowerCI",	"UpperCI", "2013-16", "StdErr",	"LowerCI",	"UpperCI")
colnames(df_race9) = collabel2
df2load <- read.csv('D-5.2-data.csv')
View(df2load)
#a1c below 7
df_race7 <- df2load[c(8,11,12),]
colnames(df_race7) <- collabel2
View(df_race7)
r_a1c9 = df_race9[,c(1, 3, 7, 11)]
r_a1c9$a1c = c(">9", ">9")
r_a1c9$a1c = c(">9", ">9", ">9")
View(r_a1c9)
r_a1c7 = df_race9[,c(1, 3, 7, 11)]
r_a1c7$a1c = c("<7", "<7", "<7")
View(r_a1c7)
r_a1c <- rbind(r_a1c9, r_a1c7)
r_a1c = melt(r_a1c, id.vars = c('race', 'a1c') )
r_a1c$value = as.numeric(r_a1c$value)
View(r_a1c)
a1c_names = list("<7" = "HbA1c under 7.0%", ">9" = "HbA1c above 9.0%")
a1clabeller <- function(variable,value){
return(a1c_names[value])
}
ggplot(r_a1c, aes(x = variable, y = value, fill = race))+
geom_bar(stat = "identity", position = "dodge")+
facet_grid(a1c ~ ., labeller = a1clabeller) +
ggtitle("Race vs HbA1c")
